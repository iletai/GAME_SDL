#include "AmorGunObject.h"

////////////////////////////////////////////////////////////////////////////////////////////

AmoGunObject::AmoGunObject() 
	: x_valAmor(0)
	, y_valAmor(0)
	, isMovingAmor(false)
	, amorType(NONE)
{
	rect.x = 0;
	rect.y = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////

AmoGunObject::~AmoGunObject()
{

}

///////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::HandleMoveTopToDown()
{
	rect.y += 10;
	if (rect.x < 0)
	{
		isMovingAmor = false;
	}
}

///////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::HandleInputActionAmor(SDL_Event events)
{

}

////////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::HandleMoveAmor(const int& x_screenBorder, const int& y_screenBorder)
{
	rect.y -= 10;
	if (rect.y > x_screenBorder)
	{
		isMovingAmor = false;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::SetTypeAmor(const int &type)
{
	amorType = type;
}

////////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::SetWidthHeightAmor(const int& width, const int& height)
{
	rect.w = width;
	rect.h = height;
}

////////////////////////////////////////////////////////////////////////////////////////////

int AmoGunObject::GetTypeAmor() const
{
	return amorType;
}

////////////////////////////////////////////////////////////////////////////////////////////

bool AmoGunObject::GetIsMovingAmor() const
{
	return isMovingAmor;
}

////////////////////////////////////////////////////////////////////////////////////////////

void AmoGunObject::SetIsMoving(bool isMove)
{
	isMovingAmor = isMove;
}
////////////////////////////////////////////////////////////////////////////////////////////
